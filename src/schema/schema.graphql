type Query {
  students: [Student!]!
  student(id: ID!): Student!
  courses: [Course!]!
  course(id: ID!): Course!
}

type Mutation {
  createCourse(course: CourseInput!): Course!
  updateCourse(course: CourseInput!): Course!
  deleteCourse(id: ID!): Course!
}

input CourseInput {
  id: ID
  title: String!
  description: String!
  class: Int!
  time: Float!
  logo: String!
  level: Level!
  path: String!
  teacher: String!
}

type Student {
  id: ID!
  name: String!
  email: String!
  website: String
  courses: [Course!]!
}

type Course {
  id: ID!
  title: String!
  description: String!
  class: Int!
  time: Float!
  logo: String!
  level: Level!
  path: String!
  teacher: String!
  students: [Student]
  reviews: [Review]
}

enum Level {
  ALL
  MEDIUM
  BEGINNER
  EXPERT
}

type Review {
  id: ID!
  name: String!
  points: Float!
  comment: String
}
